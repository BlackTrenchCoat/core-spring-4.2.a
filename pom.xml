<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.pivotal.education.core-spring</groupId>
	<artifactId>parentCoreSpringProject</artifactId>
	<version>4.2.a.RELEASE</version>

	<packaging>pom</packaging>

	<parent>
		<groupId>io.spring.platform</groupId>
		<artifactId>platform-bom</artifactId>
		<version>1.1.3.RELEASE</version>
		<relativePath/>  <!-- lookup parent from repository -->
	</parent>

	<properties>
		<!-- Unified location for version numbers not included in Spring IO. Child 
			projects can override -->
		<java.version>1.8</java.version>
		<easymock.version>3.1</easymock.version>
		<hibernate.jmx.version>3.5.6-Final</hibernate.jmx.version>
		<jamon.version>2.81</jamon.version>
		<spring.version>4.2.0.RELEASE</spring.version>
		<!-- Other dependency versons inherited from Spring IO Platform BOM -->
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<!-- needed for the Spring jdbc namespace -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- Course specific -->
			<dependency>
				<groupId>io.pivotal.education.core-spring</groupId>
				<artifactId>rewards-common</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>io.pivotal.education.core-spring</groupId>
				<artifactId>rewards-db</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Other -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-jmx</artifactId>
				<version>${hibernate.jmx.version}</version>
			</dependency>

			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<!-- Ensure resources are exported correctly - conflict with Spring Boot -->
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<!-- Set Java version -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<!-- Set Project Natures -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<sourceIncludes>
						<sourceInclude>**/*.*</sourceInclude>
					</sourceIncludes>
					<!-- All of them are listed manually to solve a limitation of the mvn 
						eclipse plugin (https://issuetracker.springsource.com/browse/STS-2938). This 
						might cause some issues when migrating to the next version of Eclipse/STS) 
						also see spring-intro/pom.xml (projectnatures defined explicitely there as 
						well) -->
					<projectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
						<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
						<projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
						<projectnature>org.eclipse.jem.workbench.JavaEMFNature</projectnature>
					</projectnatures>
					<additionalBuildcommands>
						<name>org.springframework.ide.eclipse.core.springbuilder</name>
					</additionalBuildcommands>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
			</plugin>

			<!-- WAR Support -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>

			<!-- Ensure resources are handled correctly -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<!-- ****************************************************************** 
		END OF OPTIONAL DEPENDENCIES
		****************************************************************** -->
	<modules>
        <!--
          // DO NOT MODIFY THESE MODULE ELEMENTS - GENERATED AUTOMATICALLY
          -->
        <!-- Section: intro -->
        <module>rewards-common</module>
        <module>rewards-db</module>
        <!-- Section: main -->
        <module>spring-intro</module>
        <module>spring-intro-solution</module>
        <module>javaconfig-dependency-injection</module>
        <module>javaconfig-dependency-injection-solution</module>
        <module>annotations</module>
        <module>annotations-solution</module>
        <module>xml-di</module>
        <module>xml-di-solution</module>
        <module>test</module>
        <module>test-solution</module>
        <module>aop</module>
        <module>aop-solution</module>
        <module>jdbc</module>
        <module>jdbc-solution</module>
        <module>tx</module>
        <module>tx-solution</module>
        <module>jpa-spring-data</module>
        <module>jpa-spring-data-solution</module>
        <module>mvc</module>
        <module>mvc-solution</module>
        <module>spring-boot-offline</module>
        <module>spring-boot-solution</module>
        <module>security</module>
        <module>security-solution</module>
        <module>rest-ws</module>
        <module>rest-ws-solution</module>
        <module>spring-microservices</module>
        <module>spring-microservices-solution</module>
        <!-- Section: optional -->
        <module>xml-dependency-injection-best-practices</module>
        <module>xml-dependency-injection-best-practices-solution</module>
        <module>jms</module>
        <module>jms-solution</module>
        <module>jms-demo</module>
        <module>jmx</module>
        <module>jmx-solution</module>
        <module>jmx-demo</module>
        <!-- Section: appendix -->
    </modules>
</project>
